{"version":3,"file":"components.umd.js","sources":["ng://components/src/components/card/interfaces/card.interface.ts","ng://components/src/components/card/confirmation/confirmation.component.ts","ng://components/src/components/card/card.component.ts","ng://components/src/material.module.ts","ng://components/src/components/card/card.module.ts"],"sourcesContent":["import { Period } from 'components/src/interfaces';\n\nexport class Card {\n  id?: string;\n  name = '';\n  description = '';\n  author?: string;\n  public = false;\n  liked: boolean;\n  created?: Date;\n  notesSearchInfo: NotesSearchInfo = new NotesSearchInfo();\n  image?: string;\n}\n\nexport class NotesSearchInfo {\n  text = '';\n  proximityValue = 2;\n  showEntireSet = false;\n  minYear = new Date().getFullYear() - 2;\n  maxYear = new Date().getFullYear();\n  searchAllCompanies = true;\n  selectedCompanies: Array<string> = [];\n  selectionType: SelectionType = SelectionType.ALL;\n  formTypes: Array<FormTypes> = [];\n  fiscalPeriods: Array<Period> = [];\n}\n\nexport enum SelectionType {\n  ALL = 'All',\n  FORMS = 'FORMS',\n  ER = 'ER',\n  MDA = 'MDA',\n  CL = 'CL',\n  PROXY = 'PROXY',\n}\n\nexport enum FormTypes {\n  _ALL = 'ALL',\n  _ANN = 'ANN',\n  _QTR = 'QTR',\n  _10K = '10-K',\n  _10Q = '10-Q',\n  _8K = '8-K',\n  _20F = '20-F',\n}\n\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'idaciti-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmationComponent {\n\n  constructor(public thisDialogRef: MatDialogRef<ConfirmationComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onCloseConfirm() {\n    this.thisDialogRef.close('Confirm');\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close('Cancel');\n  }\n}\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { Card } from './interfaces/card.interface';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'idaciti-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CardComponent {\n\n  @Input() card: Card;\n\n  @Output() viewCard: EventEmitter<string> = new EventEmitter<string>();\n  @Output() editCard: EventEmitter<string> = new EventEmitter<string>();\n  @Output() removeCard: EventEmitter<string> = new EventEmitter<string>();\n  @Output() publishCard: EventEmitter<{ id: string; status: boolean }> = new EventEmitter<{ id: string; status: boolean }>();\n  @Output() likeCard: EventEmitter<{ id: string; status: boolean }> = new EventEmitter<{ id: string; status: boolean }>();\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  setMyStyles() {\n    return (this.card && this.card.image) ? {\n      'background-image': `url(${this.card.image})`\n    } : {};\n  }\n\n  edit() {\n    console.warn('edit: card: ', this.card);\n    this.editCard.emit(this.card.id);\n  }\n\n  remove() {\n    const dialogRef = this.dialog.open(ConfirmationComponent, {\n      width: '600px',\n      data: {\n        title: 'Confirm Deletion',\n        message: `Are you sure you want to permanently remove <small class=\"text-danger bold\">${this.card.name}</small>?`\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.removeCard.emit(this.card.id);\n      }\n    });\n  }\n\n  view() {\n    this.viewCard.emit(this.card.id);\n  }\n\n  publish(status) {\n    const dialogRef = this.dialog.open(ConfirmationComponent, {\n      width: '600px',\n      data: {\n        title: 'Confirm Publication',\n        message: `Are you sure you want to make <small class=\"text-danger bold\">${this.card.name}</small>\n          ${status ? ' public' : 'private'}?`\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.publishCard.emit({\n          id: this.card.id,\n          status\n        });\n      }\n    });\n  }\n\n  like(status) {\n    this.likeCard.emit({\n      id: this.card.id,\n      status\n    });\n  }\n\n}\n","import {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTreeModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n  imports: [],\n})\nexport class MaterialModule {\n}\n\n","import { NgModule } from '@angular/core';\nimport { CardComponent } from './card.component';\nimport { MaterialModule } from '../../material.module';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n    ConfirmationComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  exports: [CardComponent],\n  entryComponents: [ConfirmationComponent],\n})\nexport class CardModule {\n}\n"],"names":["Component","ViewEncapsulation","MatDialogRef","Inject","MAT_DIALOG_DATA","EventEmitter","MatDialog","Input","Output","NgModule","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTreeModule","MatTabsModule","MatToolbarModule","MatTooltipModule","CommonModule","BrowserAnimationsModule"],"mappings":"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"}