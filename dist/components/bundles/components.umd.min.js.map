{"version":3,"sources":["ng://components/src/components/card/interfaces/card.interface.ts","ng://components/src/components/card/confirmation/confirmation.component.ts","ng://components/src/components/card/card.component.ts","ng://components/src/material.module.ts","ng://components/src/components/card/card.module.ts"],"names":["Card","this","name","description","public","notesSearchInfo","NotesSearchInfo","text","proximityValue","showEntireSet","minYear","Date","getFullYear","maxYear","searchAllCompanies","selectedCompanies","selectionType","SelectionType","ALL","formTypes","fiscalPeriods","FORMS","ER","MDA","CL","PROXY","ConfirmationComponent","thisDialogRef","data","prototype","onCloseConfirm","close","onCloseCancel","Component","args","selector","template","encapsulation","ViewEncapsulation","None","MatDialogRef","Inject","MAT_DIALOG_DATA","CardComponent","dialog","viewCard","EventEmitter","editCard","removeCard","publishCard","likeCard","setMyStyles","card","image","background-image","edit","console","warn","emit","id","remove","_this","open","width","title","message","afterClosed","subscribe","result","view","publish","status","like","MatDialog","Input","Output","MaterialModule","NgModule","exports","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTreeModule","MatTabsModule","MatToolbarModule","MatTooltipModule","imports","CardModule","declarations","CommonModule","BrowserAnimationsModule","entryComponents","_ALL","_ANN","_QTR","_10K","_10Q","_8K","_20F"],"mappings":"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","sourcesContent":["import { Period } from 'components/src/interfaces';\n\nexport class Card {\n  id?: string;\n  name = '';\n  description = '';\n  author?: string;\n  public = false;\n  liked: boolean;\n  created?: Date;\n  notesSearchInfo: NotesSearchInfo = new NotesSearchInfo();\n  image?: string;\n}\n\nexport class NotesSearchInfo {\n  text = '';\n  proximityValue = 2;\n  showEntireSet = false;\n  minYear = new Date().getFullYear() - 2;\n  maxYear = new Date().getFullYear();\n  searchAllCompanies = true;\n  selectedCompanies: Array<string> = [];\n  selectionType: SelectionType = SelectionType.ALL;\n  formTypes: Array<FormTypes> = [];\n  fiscalPeriods: Array<Period> = [];\n}\n\nexport enum SelectionType {\n  ALL = 'All',\n  FORMS = 'FORMS',\n  ER = 'ER',\n  MDA = 'MDA',\n  CL = 'CL',\n  PROXY = 'PROXY',\n}\n\nexport enum FormTypes {\n  _ALL = 'ALL',\n  _ANN = 'ANN',\n  _QTR = 'QTR',\n  _10K = '10-K',\n  _10Q = '10-Q',\n  _8K = '8-K',\n  _20F = '20-F',\n}\n\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'idaciti-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmationComponent {\n\n  constructor(public thisDialogRef: MatDialogRef<ConfirmationComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onCloseConfirm() {\n    this.thisDialogRef.close('Confirm');\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close('Cancel');\n  }\n}\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { Card } from './interfaces/card.interface';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'idaciti-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CardComponent {\n\n  @Input() card: Card;\n\n  @Output() viewCard: EventEmitter<string> = new EventEmitter<string>();\n  @Output() editCard: EventEmitter<string> = new EventEmitter<string>();\n  @Output() removeCard: EventEmitter<string> = new EventEmitter<string>();\n  @Output() publishCard: EventEmitter<{ id: string; status: boolean }> = new EventEmitter<{ id: string; status: boolean }>();\n  @Output() likeCard: EventEmitter<{ id: string; status: boolean }> = new EventEmitter<{ id: string; status: boolean }>();\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  setMyStyles() {\n    return (this.card && this.card.image) ? {\n      'background-image': `url(${this.card.image})`\n    } : {};\n  }\n\n  edit() {\n    console.warn('edit: card: ', this.card);\n    this.editCard.emit(this.card.id);\n  }\n\n  remove() {\n    const dialogRef = this.dialog.open(ConfirmationComponent, {\n      width: '600px',\n      data: {\n        title: 'Confirm Deletion',\n        message: `Are you sure you want to permanently remove <small class=\"text-danger bold\">${this.card.name}</small>?`\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.removeCard.emit(this.card.id);\n      }\n    });\n  }\n\n  view() {\n    this.viewCard.emit(this.card.id);\n  }\n\n  publish(status) {\n    const dialogRef = this.dialog.open(ConfirmationComponent, {\n      width: '600px',\n      data: {\n        title: 'Confirm Publication',\n        message: `Are you sure you want to make <small class=\"text-danger bold\">${this.card.name}</small>\n          ${status ? ' public' : 'private'}?`\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.publishCard.emit({\n          id: this.card.id,\n          status\n        });\n      }\n    });\n  }\n\n  like(status) {\n    this.likeCard.emit({\n      id: this.card.id,\n      status\n    });\n  }\n\n}\n","import {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTreeModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n  imports: [],\n})\nexport class MaterialModule {\n}\n\n","import { NgModule } from '@angular/core';\nimport { CardComponent } from './card.component';\nimport { MaterialModule } from '../../material.module';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n    ConfirmationComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  exports: [CardComponent],\n  entryComponents: [ConfirmationComponent],\n})\nexport class CardModule {\n}\n"]}